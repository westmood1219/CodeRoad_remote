C51 COMPILER V9.52.0.0   EEPROM                                                            07/16/2024 11:47:42 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN EEPROM.OBJ
COMPILER INVOKED BY: D:\software\Keil_C51\C51\BIN\C51.EXE EEPROM.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*********************************************************************************************************
   2          * 模块名称: EEPROM.c
   3          * 摘    要: STC89系列单片机内部EEPROM读写模块
   4          * 当前版本: 1.0.0
   5          * 作    者: Leyutek(COPYRIGHT 2018 - 2021 Leyutek. All rights reserved.)
   6          * 完成日期: 2022年2月1日
   7          * 内    容: 
   8          * 注    意: 
   9          **********************************************************************************************************
  10          * 取代版本: 
  11          * 作    者: 
  12          * 完成日期: 
  13          * 修改内容: 
  14          * 修改文件: 
  15          *********************************************************************************************************/
  16          /*********************************************************************************************************
  17          *                                              包含头文件
  18          *********************************************************************************************************/
  19          #include <reg52.h>
  20          #include <EEPROM.h>
  21          
  22          /*********************************************************************************************************
  23          *                                              宏定义
  24          *********************************************************************************************************/
  25          
  26          /*********************************************************************************************************
  27          *                                              枚举结构体定义
  28          *********************************************************************************************************/
  29          
  30          /*********************************************************************************************************
  31          *                                              内部变量
  32          *********************************************************************************************************/
  33          
  34          /*********************************************************************************************************
  35          *                                              内部函数声明
  36          *********************************************************************************************************/
  37          static void IAPTrigger();
  38          static void IAPDisable();
  39          
  40          /*********************************************************************************************************
  41          *                                              内部函数实现
  42          *********************************************************************************************************/
  43          /*********************************************************************************************************
  44          * 函数名称: IAPTrigger
  45          * 函数功能: 触发ISP-IAP功能
  46          * 输入参数: void
  47          * 输出参数: void
  48          * 返 回 值: void
  49          * 创建日期: 2022年02月01日
  50          * 注    意: 
  51          *********************************************************************************************************/
  52          static void IAPTrigger()
  53          {
  54   1        ISP_TRIG = 0x46;          //对ISP-IAP命令触发寄存器写入触发命令0x46
  55   1        ISP_TRIG = 0xB9;          //对ISP-IAP命令触发寄存器写入触发命令0xB9
C51 COMPILER V9.52.0.0   EEPROM                                                            07/16/2024 11:47:42 PAGE 2   

  56   1      }
  57          
  58          /*********************************************************************************************************
  59          * 函数名称: IAPDisable
  60          * 函数功能: 禁用ISP-IAP功能
  61          * 输入参数: void
  62          * 输出参数: void
  63          * 返 回 值: void
  64          * 创建日期: 2022年02月01日
  65          * 注    意: 
  66          *********************************************************************************************************/
  67          static void IAPDisable()
  68          {
  69   1        ISP_CONTR = 0x00;          //禁用IAP读写EEPROM
  70   1        ISP_CMD   = 0x00;          //无IAP操作
  71   1        ISP_TRIG  = 0x00;          //关闭IAP功能
  72   1      }
  73          
  74          /*********************************************************************************************************
  75          *                                              API函数实现
  76          *********************************************************************************************************/
  77          
  78          /*********************************************************************************************************
  79          * 函数名称: IAPByteRead
  80          * 函数功能: 按字节读取指定扇区数据
  81          * 输入参数: addr-扇区地址
  82          * 输出参数: void
  83          * 返 回 值: dat-扇区内1字节数据
  84          * 创建日期: 2022年02月01日
  85          * 注    意: 
  86          *********************************************************************************************************/
  87          unsigned char IAPByteRead(unsigned int addr)
  88          {
  89   1        unsigned char dat;        //定义数据缓存变量
  90   1        ISP_CONTR = 0x81;         //打开IAP功能，允许编程改变Flash，设置Flash操作等待时间
  91   1        ISP_CMD   = 0x01;         //允许对"Data Flash/EEPROM区"进行字节读取
  92   1        
  93   1        ISP_ADDRL = addr;         //IAP操作地址寄存器低位
  94   1        ISP_ADDRH = addr >> 8;    //IAP操作地址寄存器高位
  95   1      
  96   1        IAPTrigger();             //触发IAP功能
  97   1        dat = ISP_DATA;           //将需要读出的数据放进缓存变量
  98   1        IAPDisable();             //禁用IAP功能
  99   1        return dat;               //将读取到的数据作为返回值
 100   1      }
 101          
 102          /*********************************************************************************************************
 103          * 函数名称: IAPSectorErase
 104          * 函数功能: 擦除指定扇区的数据
 105          * 输入参数: addr-扇区地址
 106          * 输出参数: void
 107          * 返 回 值: void
 108          * 创建日期: 2022年02月01日
 109          * 注    意: 
 110          *********************************************************************************************************/
 111          void IAPSectorErase(unsigned int addr)
 112          {
 113   1        ISP_CONTR = 0x81;           //打开IAP功能，允许编程改变Flash，设置Flash操作等待时间
 114   1        ISP_CMD   = 0x03;           //允许对"Data Flash/EEPROM区"进行扇区擦除
 115   1      
 116   1        ISP_ADDRL = addr;           //写入IAP操作地址寄存器低位
 117   1        ISP_ADDRH = addr >> 8;      //写入IAP操作地址寄存器高位
C51 COMPILER V9.52.0.0   EEPROM                                                            07/16/2024 11:47:42 PAGE 3   

 118   1      
 119   1        IAPTrigger();               //触发IAP功能
 120   1        IAPDisable();               //禁用IAP功能
 121   1      }
 122          
 123          /*********************************************************************************************************
 124          * 函数名称: ISP_IAP_SectorWrite
 125          * 函数功能: 对指定扇区写入数据写入1字节数据
 126          * 输入参数: addr-扇区地址 dat-需要写入的数据
 127          * 输出参数: void
 128          * 返 回 值: void
 129          * 创建日期: 2022年02月01日
 130          * 注    意: 
 131          *********************************************************************************************************/
 132          void IAPByteWrite(unsigned int addr, unsigned char dat)
 133          {
 134   1        ISP_CONTR = 0x81;          //打开IAP功能，允许编程改变Flash，设置Flash操作等待时间
 135   1        ISP_CMD   = 0x02;          //允许对"Data Flash/EEPROM区"进行字节写入
 136   1      
 137   1        ISP_ADDRL = addr;          //IAP操作地址寄存器低位
 138   1        ISP_ADDRH = addr >> 8;     //IAP操作地址寄存器高位
 139   1        ISP_DATA = dat;            //将需要写入的数据放进ISP_DATA
 140   1      
 141   1        IAPTrigger();              //触发IAP功能
 142   1        IAPDisable();              //禁用IAP功能
 143   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     68    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
