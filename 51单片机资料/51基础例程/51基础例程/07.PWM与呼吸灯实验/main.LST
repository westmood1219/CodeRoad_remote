C51 COMPILER V9.52.0.0   MAIN                                                              04/13/2022 22:59:32 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: f:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*********************************************************************************************************
   2          * 模块名称: Main.c
   3          * 摘    要: 主文件，包含初始化函数和main函数
   4          * 当前版本: 1.0.0
   5          * 作    者: Leyutek(COPYRIGHT 2018 - 2021 Leyutek. All rights reserved.)
   6          * 完成日期: 2022年2月1日
   7          * 内    容: 
   8          * 注    意: 
   9          **********************************************************************************************************
  10          * 取代版本: 
  11          * 作    者: 
  12          * 完成日期: 
  13          * 修改内容: 
  14          * 修改文件: 
  15          *********************************************************************************************************/
  16          /*********************************************************************************************************
  17          *                                              包含头文件
  18          *********************************************************************************************************/
  19          #include <reg52.h>
  20          
  21          /*********************************************************************************************************
  22          *                                              位定义
  23          *********************************************************************************************************/
  24          sbit LED1 = P2^4; //定义LED1
  25          
  26          /*********************************************************************************************************
  27          *                                              宏定义
  28          *********************************************************************************************************/
  29          
  30          /*********************************************************************************************************
  31          *                                              枚举结构体定义
  32          *********************************************************************************************************/
  33          
  34          /*********************************************************************************************************
  35          *                                              内部变量
  36          *********************************************************************************************************/
  37          
  38          /*********************************************************************************************************
  39          *                                              内部函数声明
  40          *********************************************************************************************************/
  41          static void InitInterrupt(void);
  42          static void InitTimer0(void);
  43          
  44          /*********************************************************************************************************
  45          *                                              内部函数实现
  46          *********************************************************************************************************/
  47          
  48          /*********************************************************************************************************
  49          * 函数名称: InitInterrupt
  50          * 函数功能: 配置定时器0中断
  51          * 输入参数: void
  52          * 输出参数: void
  53          * 返 回 值: void
  54          * 创建日期: 2022年2月1日
  55          * 注    意: 
C51 COMPILER V9.52.0.0   MAIN                                                              04/13/2022 22:59:32 PAGE 2   

  56          *********************************************************************************************************/
  57          static void InitInterrupt()
  58          {
  59   1        ET0 = 1;   //打开 定时器0 中断允许
  60   1        EA  = 1;   //打开 总中断允许
  61   1      }
  62          
  63          /*********************************************************************************************************
  64          * 函数名称: InitInterrupt
  65          * 函数功能: 配置定时器0
  66          * 输入参数: void
  67          * 输出参数: void
  68          * 返 回 值: void
  69          * 创建日期: 2022年2月1日
  70          * 注    意: 
  71          *********************************************************************************************************/
  72          static void InitTimer0()
  73          {
  74   1        TMOD = 0x02;  //设置 定时器0 工作方式2
  75   1        TH0  = 0x9C;  //设置 定时器0 重装值
  76   1        TL0  = 0x9C;  //设置 定时器0 计数初值，定时时间100us
  77   1        TR0  = 1;     //打开 定时器0
  78   1      }
  79          
  80          /*********************************************************************************************************
  81          * 函数名称: main
  82          * 函数功能: 主函数
  83          * 输入参数: void
  84          * 输出参数: void
  85          * 返 回 值: void
  86          * 创建日期: 2022年2月1日
  87          * 注    意: 
  88          *********************************************************************************************************/
  89          void main()
  90          {
  91   1        InitInterrupt();  //配置中断
  92   1        InitTimer0();     //配置定时器0
  93   1        while (1)
  94   1        {
  95   2      
  96   2        }
  97   1      }
  98          
  99          /*********************************************************************************************************
 100          * 函数名称: Timer0_Handler
 101          * 函数功能: 定时器0中断服务函数
 102          * 输入参数: void
 103          * 输出参数: void
 104          * 返 回 值: void
 105          * 创建日期: 2022年2月1日
 106          * 注    意: 
 107          *********************************************************************************************************/
 108          void Timer0_Handler () interrupt 1
 109          {
 110   1        static unsigned int s_iCnt1 = 0;        //定义静态变量s_iCnt1作为10ms计数变量，用于控制PWM周期
 111   1        static unsigned int s_iCnt2 = 0;        //定义静态变量s_iCnt1作为20ms计数变量，用于控制呼吸快慢
 112   1        static unsigned int s_iDuty = 100;      //定义静态变量s_iDuty作为占空比
 113   1        static unsigned char s_iFlag = 0;       //定义静态变量s_iFlag作为占空比减小或增加的标志，为0时占空比减小
             -，为1时增加
 114   1        
 115   1        s_iCnt1++;
 116   1        if(s_iCnt1 >= 100)       //PWM周期控制，周期为100*100us=10ms
C51 COMPILER V9.52.0.0   MAIN                                                              04/13/2022 22:59:32 PAGE 3   

 117   1        {
 118   2          s_iCnt1 = 0;           //清零10ms计数变量
 119   2        }
 120   1        
 121   1        s_iCnt2++;
 122   1        if(s_iCnt2 >= 200)       //调节占空比，周期为200*100us=20ms，用于控制呼吸快慢
 123   1        {
 124   2          s_iCnt2 = 0;           //清零20ms计数变量
 125   2      
 126   2          //占空比标志调节
 127   2          if(s_iDuty >= 100 && 1 == s_iFlag)     //若占空比增大到100且当前标志为增加占空比
 128   2          {
 129   3            s_iFlag = 0;                         //设置标志为减小占空比
 130   3          } 
 131   2          else if(0 == s_iDuty && 0 == s_iFlag)  //若占空比减小到0且当前标志为减小占空比
 132   2          {
 133   3            s_iFlag = 1;                         //设置标志为增加占空比
 134   3          }
 135   2      
 136   2          //占空比调节
 137   2          if(0 == s_iFlag)       //若s_iFlag为0
 138   2          {
 139   3            s_iDuty--;           //减小占空比
 140   3          }
 141   2          else if(1 == s_iFlag)  //若s_iFlag为1
 142   2          {
 143   3            s_iDuty++;           //增加占空比
 144   3          }
 145   2        }
 146   1      
 147   1        if(s_iCnt1 <= s_iDuty)   //控制LED的打开与关闭
 148   1        {
 149   2          LED1 = 1;              //P2.4引脚输出高电平，关闭LED1
 150   2        }
 151   1        else
 152   1        { 
 153   2          LED1 = 0;              //P2.4引脚输出低电平，打开LED1
 154   2        }
 155   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    157    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
